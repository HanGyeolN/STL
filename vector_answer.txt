-----------CONSTRUCT
fifth
The contents of fifth are: 16 2 77 29
-----------OPERATOR=
Size of foo: 0
Size of bar: 3
---------------BEGIN
myVector contains: 1 2 3 4 5
-----------------END
myVector contains: 1 2 3 4 5
--------------RBEGIN
myVector contains: 5 4 3 2 1
----------------REND
myVector contains: 5 4 3 2 1
----------------SIZE
0. size: 0
1. size: 10
2. size: 20
3. size: 19
------------MAX_SIZE
size: 100
capacity: 128
max_size: 4611686018427387903
--------------RESIZE
myVector contains: 1 2 3 4 5 100 100 100 0 0 0 0
------------CAPACITY
size: 100
capacity: 128
max_size: -1
---------------EMPTY
total: 55
-------------RESERVE
making foo grow:
capacity changed: 1
capacity changed: 2
capacity changed: 4
capacity changed: 8
capacity changed: 16
capacity changed: 32
capacity changed: 64
capacity changed: 128
making bar grow:
capacity changed: 100
----------OPERATOR[]
myVector contains: 9 8 7 6 5 4 3 2 1 0
------------------AT
myVector contains: 0 1 2 3 4 5 6 7 8 9
---------------FRONT
myVector.front() is now 62
----------------BACK
myVector contains: 10 9 8 7 6 5 4 3 2 1 0
--------------ASSIGN
Size of first: 7
Size of second: 5
Size of third: 3
-----------PUSH_BACK
myVector stores 10 numbers.
------------POP_BACK
The elements of myVector add up to 600
--------------INSERT
myVector contains: 501 502 503 300 300 400 400 200 100 100 100
---------------ERASE
myVector contains: 4 5 7 8 9 10
----------------SWAP
foo contains: 200 200 200 200 200
bar contains: 100 100 100
---------------CLEAR
myVector contains: 100 200 300
myVector contains: 1101 2202
----------RELATIONAL
foo and bar are not equal
foo is less than bar
foo is less than or equal to bar
----------------SWAP
foo contains: 200 200 200 200 200
bar contains: 100 100 100
---------------ERASE
a: 3
b: 3
1 2 3 1 2 3 